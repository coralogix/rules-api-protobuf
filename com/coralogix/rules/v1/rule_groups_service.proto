syntax = "proto3";

package com.coralogix.rules.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "com/coralogix/rules/v1/rule.proto";
import "com/coralogix/rules/v1/rule_group.proto";
import "com/coralogix/rules/v1/rule_matcher.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "com/coralogix/openapi/v1/annotations.proto";

message AuditLogDescription {
  optional string description = 1;
}

extend google.protobuf.MethodOptions {
  AuditLogDescription audit_log_description = 5000;
}

service RuleGroupsService {
  option (com.coralogix.openapi.v1.service) = {
    description: "API to define, query, and manage your rules"
    resource_name: "RuleGroup"
  };
  rpc GetRuleGroup(GetRuleGroupRequest) returns (GetRuleGroupResponse) {
    option (audit_log_description).description = "get rule group";
    option (google.api.http) = {
      get: "/api/v1/rulegroups/{group_id}"

      additional_bindings: {
        get: "/v1/rulegroups/{group_id}"
        response_body: "rule_group"
      }
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Gets rule group by groupid"
      response_body_example: "{\"id\":\"a2ddf5dd-f77f-4bea-b782-4068c510e15d\",\"name\":\"mysql-extractrule\",\"description\":\"mysql-cloudwatch audit logs  parser\",\"creator\":\"bot@coralogix.com\",\"enabled\":true,\"hidden\":false,\"rule_matchers\":[{\"subsystem_name\":{\"value\":\"mysql-cloudwatch\"}}],\"rule_subgroups\":[{\"id\":\"2df585fe-be27-4062-aa42-e740193bfc75\",\"rules\":[{\"id\":\"bd585f17-278a-4908-b05b-54fd6bf693be\",\"name\":\"mysql-parse\",\"description\":\"mysql-parse\",\"source_field\":\"text\",\"parameters\":{\"parse_parameters\":{\"destination_field\":\"text\",\"rule\":\"(?P<timestamp>[^,]+),(?P<hostname>[^,]+),(?P<username>[^,]+),(?P<ip>[^,]+),(?P<connectionId>[0-9]+),(?P<queryId>[0-9]+),(?P<operation>[^,]+),(?P<database>[^,]+),'?(?P<object>.*)'?,(?P<returnCode>[0-9]+)\"}},\"enabled\":true,\"order\":1}],\"enabled\":true,\"order\":1}],\"order\":5}"
    };
  }
  rpc ListRuleGroups(ListRuleGroupsRequest) returns (ListRuleGroupsResponse) {
    option (audit_log_description).description = "get all rule groups";
    option (google.api.http) = {
      get: "/api/v1/rulegroups"
    };
  }
  rpc CreateRuleGroup(CreateRuleGroupRequest) returns (CreateRuleGroupResponse) {
    option (audit_log_description).description = "create rule group";
    option (google.api.http) = {
      post: "/api/v1/rulegroups/"
      body: "*"

      additional_bindings: {
        post: "/v1/rulegroups"
        body: "*"
        response_body: "rule_group"
      }
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Creates rule group"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"RuleGroupPrototype\""}
      ]
      request_body_example: "{\"name\":\"mysql-extractrule\",\"description\":\"mysql-cloudwatch audit logs  parser\",\"creator\":\"bot@coralogix.com\",\"enabled\":true,\"hidden\":false,\"rule_matchers\":[{\"subsystem_name\":{\"value\":\"mysql-cloudwatch\"}}],\"rule_subgroups\":[{\"rules\":[{\"name\":\"mysql-parse\",\"description\":\"mysql-parse\",\"source_field\":\"text\",\"parameters\":{\"parse_parameters\":{\"destination_field\":\"text\",\"rule\":\"(?P<timestamp>[^,]+),(?P<hostname>[^,]+),(?P<username>[^,]+),(?P<ip>[^,]+),(?P<connectionId>[0-9]+),(?P<queryId>[0-9]+),(?P<operation>[^,]+),(?P<database>[^,]+),'?(?P<object>.*)'?,(?P<returnCode>[0-9]+)\"}},\"enabled\":true,\"order\":1}],\"enabled\":true,\"order\":1}],\"order\":39}"
      response_body_example: "{\"id\":\"dae394d9-027a-4f95-a441-c7f3d4ea857d\",\"name\":\"mysql-extractrule\",\"description\":\"mysql-cloudwatch audit logs  parser\",\"creator\":\"bot@coralogix.com\",\"enabled\":true,\"hidden\":false,\"rule_matchers\":[{\"subsystem_name\":{\"value\":\"mysql-cloudwatch\"}}],\"rule_subgroups\":[{\"id\":\"7a4770de-b2db-4e68-a891-68a43e9fea3c\",\"rules\":[{\"id\":\"d032de36-1dd2-410d-a992-fc150337df83\",\"name\":\"mysql-parse\",\"description\":\"mysql-parse\",\"source_field\":\"text\",\"parameters\":{\"parse_parameters\":{\"destination_field\":\"text\",\"rule\":\"(?P<timestamp>[^,]+),(?P<hostname>[^,]+),(?P<username>[^,]+),(?P<ip>[^,]+),(?P<connectionId>[0-9]+),(?P<queryId>[0-9]+),(?P<operation>[^,]+),(?P<database>[^,]+),'?(?P<object>.*)'?,(?P<returnCode>[0-9]+)\"}},\"enabled\":true,\"order\":1}],\"enabled\":true,\"order\":1}],\"order\":39}"
    };
  }
  rpc UpdateRuleGroup(UpdateRuleGroupRequest) returns (UpdateRuleGroupResponse) {
    option (audit_log_description).description = "update rule group";
    option (google.api.http) = {
      put: "/api/v1/rulegroups/{group_id}"
      body: "rule_group"

      additional_bindings: {
        put: "/v1/rulegroups/{group_id}"
        body: "rule_group"
        response_body: "rule_group"
      }
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Updates rule group by groupid"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"RuleGroupPrototype\""}
      ]
      request_body_example: "{\"name\":\"mysql-extractrule\",\"description\":\"mysql-cloudwatch audit logs parser\",\"creator\":\"bot@coralogix.com\",\"enabled\":true,\"hidden\":false,\"rule_matchers\":[{\"subsystem_name\":{\"value\":\"mysql-cloudwatch\"}}],\"rule_subgroups\":[{\"rules\":[{\"name\":\"mysql-parse\",\"description\":\"mysql-parse\",\"source_field\":\"text\",\"parameters\":{\"parse_parameters\":{\"destination_field\":\"text\",\"rule\":\"(?P<timestamp>[^,]+),(?P<hostname>[^,]+),(?P<username>[^,]+),(?P<ip>[^,]+),(?P<connectionId>[0-9]+),(?P<queryId>[0-9]+),(?P<operation>[^,]+),(?P<database>[^,]+),'?(?P<object>.*)'?,(?P<returnCode>[0-9]+)\"}},\"enabled\":true,\"order\":1}],\"enabled\":true,\"order\":1}],\"order\":39}"
      response_body_example: "{\"id\":\"dae394d9-027a-4f95-a441-c7f3d4ea857d\",\"name\":\"mysql-extractrule\",\"description\":\"mysql-cloudwatch audit logs parser\",\"creator\":\"bot@coralogix.com\",\"enabled\":true,\"hidden\":false,\"rule_matchers\":[{\"subsystem_name\":{\"value\":\"mysql-cloudwatch\"}}],\"rule_subgroups\":[{\"id\":\"7a4770de-b2db-4e68-a891-68a43e9fea3c\",\"rules\":[{\"id\":\"d032de36-1dd2-410d-a992-fc150337df83\",\"name\":\"mysql-parse\",\"description\":\"mysql-parse\",\"source_field\":\"text\",\"parameters\":{\"parse_parameters\":{\"destination_field\":\"text\",\"rule\":\"(?P<timestamp>[^,]+),(?P<hostname>[^,]+),(?P<username>[^,]+),(?P<ip>[^,]+),(?P<connectionId>[0-9]+),(?P<queryId>[0-9]+),(?P<operation>[^,]+),(?P<database>[^,]+),'?(?P<object>.*)'?,(?P<returnCode>[0-9]+)\"}},\"enabled\":true,\"order\":1}],\"enabled\":true,\"order\":1}],\"order\":39}"
    };
  }
  rpc DeleteRuleGroup(DeleteRuleGroupRequest) returns (DeleteRuleGroupResponse) {
    option (audit_log_description).description = "delete rule group";
    option (google.api.http) = {
      delete: "/api/v1/rulegroups/{group_id}"

      additional_bindings: {
        delete: "/v1/rulegroups/{group_id}"
      }
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Deletes rule group by groupid"
    };
  }

  rpc BulkDeleteRuleGroup(BulkDeleteRuleGroupRequest) returns (BulkDeleteRuleGroupResponse) {
    option (audit_log_description).description = "bulk delete rule groups";
    option (google.api.http) = {
      delete: "/api/v1/rulegroups"
      body: "group_ids"
    };
  }

  rpc GetRuleGroupModelMapping(GetRuleGroupModelMappingRequest) returns (GetRuleGroupModelMappingResponse){
    option (audit_log_description).description = "get rule mapping";
    option (google.api.http) = {
      post: "/api/v1/rulegroup-mapping"
      body: "*"
    };
  }

  rpc GetCompanyUsageLimits(GetCompanyUsageLimitsRequest) returns (GetCompanyUsageLimitsResponse){
    option (audit_log_description).description = "get company usage with limits";
    option (google.api.http) = {
      post: "/api/v1/rulegroups/company-limits"
      body: "*"
    };
  }
}

message GetRuleGroupRequest {
  string group_id = 1;
}

message ListRuleGroupsRequest {}

message ListRuleGroupsResponse {
  repeated RuleGroup rule_groups = 1;
}

message GetRuleGroupResponse {
  RuleGroup rule_group = 1;
}

message CreateRuleGroupRequest {
  option (com.coralogix.openapi.v1.message) = {
    description: "Parsing rule group resource model"
    resource: true
    name: "RuleGroupPrototype"
  };

  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.BoolValue enabled = 3;
  google.protobuf.BoolValue hidden = 4;
  google.protobuf.StringValue creator = 5;

  repeated RuleMatcher rule_matchers = 6;

  message CreateRuleSubgroup {
    message CreateRule {
      google.protobuf.StringValue name = 1;

      reserved "rule";
      reserved 2;

      google.protobuf.StringValue description = 3;
      google.protobuf.StringValue source_field = 4;

      RuleParameters parameters = 5;

      google.protobuf.BoolValue enabled = 6;

      google.protobuf.UInt32Value order = 7;
    }

    repeated CreateRule rules = 1;

    google.protobuf.BoolValue enabled = 2;
    google.protobuf.UInt32Value order = 3;
  }

  repeated CreateRuleSubgroup rule_subgroups = 7;

  google.protobuf.UInt32Value order = 8;
  TeamId team_id = 9;
}

message CreateRuleGroupResponse {
  RuleGroup rule_group = 1;
}

message UpdateRuleGroupRequest {
  google.protobuf.StringValue group_id = 1;

  CreateRuleGroupRequest rule_group = 2;
}

message UpdateRuleGroupResponse {
  RuleGroup rule_group = 1;
}

message DeleteRuleGroupRequest {
  string group_id = 1;
}

message BulkDeleteRuleGroupRequest {
  repeated string group_ids = 1;
}

message DeleteRuleGroupResponse {}

message BulkDeleteRuleGroupResponse {}

message GetRuleGroupModelMappingRequest {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.BoolValue enabled = 3;
  google.protobuf.BoolValue hidden = 4;
  google.protobuf.StringValue creator = 5;

  repeated RuleMatcher rule_matchers = 6;

  message CreateRuleSubgroup {
    message CreateRule {
      google.protobuf.StringValue name = 1;

      reserved "rule";
      reserved 2;

      google.protobuf.StringValue description = 3;
      google.protobuf.StringValue source_field = 4;

      RuleParameters parameters = 5;

      google.protobuf.BoolValue enabled = 6;

      google.protobuf.UInt32Value order = 7;
    }

    repeated CreateRule rules = 1;

    google.protobuf.BoolValue enabled = 2;
    google.protobuf.UInt32Value order = 3;
  }

  repeated CreateRuleSubgroup rule_subgroups = 7;

  google.protobuf.UInt32Value order = 8;
}

message GetRuleGroupModelMappingResponse {
  google.protobuf.Struct rule_definition = 1;
}

message GetCompanyUsageLimitsRequest {}

message GetCompanyUsageLimitsResponse {
  message Counts {
    google.protobuf.Int32Value parsing_themes = 1;
    google.protobuf.Int32Value groups = 2;
    google.protobuf.Int32Value rules = 3;
  }
  google.protobuf.StringValue company_id = 1;
  Counts limits = 2;
  Counts usage = 3;
}